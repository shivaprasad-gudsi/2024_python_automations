from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time

def scrape_cvss_vector(url):
    # Setup Chrome options
    chrome_options = Options()
    chrome_options.add_argument("--headless")  # Uncomment for headless mode
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")

    # Setup Chrome driver with WebDriver manager
    service = Service(ChromeDriverManager().install())
    #driver = webdriver.Chrome(service=service, options=chrome_options)
    driver = webdriver.Chrome(service=Service(ChromeDriverManager(version="114.0.5735.90").install()),options=chrome_options)

    
    try:
        # Open the given URL
        driver.get(url)
        print("Page opened successfully.")

        # Wait for the CVSS 3.1 button to be clickable and click it
        wait = WebDriverWait(driver, 20)
        cvss_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//*[@id='btn-cvss3']")))
        cvss_button.click()
        print("Clicked on CVSS 3.1 button successfully.")

        # Adding a slight delay to ensure dynamic content is loaded
        time.sleep(3)

        # Wait for the Vector element to be present under the CVSS panel
        vector_element = wait.until(
            EC.presence_of_element_located((By.XPATH, "//*[@id='Vuln3CvssPanel']/div/div[3]"))
        )

        # Extract and print the Vector text
        cvss_vector = vector_element.text
        print(f"CVSS Vector: {cvss_vector}")

    except Exception as e:
        print(f"An error occurred: {e}")

    finally:
        # Close the driver
        driver.quit()

# URL to scrape
url = "https://nvd.nist.gov/vuln/detail/CVE-2019-3773"
scrape_cvss_vector(url)
